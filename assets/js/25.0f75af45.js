(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{425:function(e,a,o){"use strict";o.r(a);var r=o(56),p=Object(r.a)({},(function(){var e=this,a=e.$createElement,o=e._self._c||a;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"soucre-map"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#soucre-map"}},[e._v("#")]),e._v(" soucre map")]),e._v(" "),o("p",[e._v("把源码转换成浏览器能够识别的代码，这样调试的时候是拿到的转换后代码。非常不好调试。")]),e._v(" "),o("p",[e._v("Webpack 支持为转换生成的代码输出对应的 Source Map 文件, 以方便在浏览器中能通过源码调试.")]),e._v(" "),o("p",[e._v("不关心细节和性能, 只是想在不出任何差错的情况下调试源码, 可以直接设置成 source-map.\n- source-map 模式下会输出质量最高最详细的 Source Map, 这会造成构建速度缓慢，特别是在开发过程需要频繁修改的时候会增加等待时间；\n- source-map 模式下会把 Source Map 暴露出去, 如果构建发布到线上的代码的 Source Map 暴露出去就等于源码被泄露；")]),e._v(" "),o("p",[e._v("在开发环境下把 devtool 设置成: cheap-module-eval-source-map, 因为生成这种 Source Map 的速度最快，能加速构建. Source Map 中即使没有列信息也不会影响断点调试；")]),e._v(" "),o("p",[e._v("在生产环境下把 devtool 设置成 hidden-source-map，意思是生成最详细的 Source Map，但不会把 Source Map 暴露出去.")])])}),[],!1,null,null,null);a.default=p.exports}}]);